//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheckersClient.ServiceSynchroCheckers {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ServiceSynchroCheckers.Classes")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdRoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PseudoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdRole {
            get {
                return this.IdRoleField;
            }
            set {
                if ((this.IdRoleField.Equals(value) != true)) {
                    this.IdRoleField = value;
                    this.RaisePropertyChanged("IdRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAvailable {
            get {
                return this.IsAvailableField;
            }
            set {
                if ((this.IsAvailableField.Equals(value) != true)) {
                    this.IsAvailableField = value;
                    this.RaisePropertyChanged("IsAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pseudo {
            get {
                return this.PseudoField;
            }
            set {
                if ((object.ReferenceEquals(this.PseudoField, value) != true)) {
                    this.PseudoField = value;
                    this.RaisePropertyChanged("Pseudo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Game", Namespace="http://schemas.datacontract.org/2004/07/ServiceSynchroCheckers.Classes")]
    [System.SerializableAttribute()]
    public partial class Game : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndedAt {
            get {
                return this.EndedAtField;
            }
            set {
                if ((this.EndedAtField.Equals(value) != true)) {
                    this.EndedAtField = value;
                    this.RaisePropertyChanged("EndedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/ServiceSynchroCheckers.Classes")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameUser", Namespace="http://schemas.datacontract.org/2004/07/ServiceSynchroCheckers.Classes")]
    [System.SerializableAttribute()]
    public partial class GameUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdGameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SideField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdGame {
            get {
                return this.IdGameField;
            }
            set {
                if ((this.IdGameField.Equals(value) != true)) {
                    this.IdGameField = value;
                    this.RaisePropertyChanged("IdGame");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Side {
            get {
                return this.SideField;
            }
            set {
                if ((this.SideField.Equals(value) != true)) {
                    this.SideField = value;
                    this.RaisePropertyChanged("Side");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Piece", Namespace="http://schemas.datacontract.org/2004/07/ServiceSynchroCheckers.Classes")]
    [System.SerializableAttribute()]
    public partial class Piece : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdGameUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEliminateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateAtField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdGameUser {
            get {
                return this.IdGameUserField;
            }
            set {
                if ((this.IdGameUserField.Equals(value) != true)) {
                    this.IdGameUserField = value;
                    this.RaisePropertyChanged("IdGameUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEliminate {
            get {
                return this.IsEliminateField;
            }
            set {
                if ((this.IsEliminateField.Equals(value) != true)) {
                    this.IsEliminateField = value;
                    this.RaisePropertyChanged("IsEliminate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuper {
            get {
                return this.IsSuperField;
            }
            set {
                if ((this.IsSuperField.Equals(value) != true)) {
                    this.IsSuperField = value;
                    this.RaisePropertyChanged("IsSuper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateAt {
            get {
                return this.UpdateAtField;
            }
            set {
                if ((this.UpdateAtField.Equals(value) != true)) {
                    this.UpdateAtField = value;
                    this.RaisePropertyChanged("UpdateAt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceSynchroCheckers.IServiceSynchroCheckers")]
    public interface IServiceSynchroCheckers {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetUserByIdUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetUserByIdUserResponse")]
        CheckersClient.ServiceSynchroCheckers.User GetUserByIdUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetUserByIdUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetUserByIdUserResponse")]
        System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.User> GetUserByIdUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddUserResponse")]
        bool AddUser(CheckersClient.ServiceSynchroCheckers.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(CheckersClient.ServiceSynchroCheckers.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateUserResponse")]
        bool UpdateUser(CheckersClient.ServiceSynchroCheckers.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(CheckersClient.ServiceSynchroCheckers.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeleteUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeleteUserResponse")]
        bool DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeleteUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetUsersAvailable", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetUsersAvailableResponse")]
        CheckersClient.ServiceSynchroCheckers.User[] GetUsersAvailable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetUsersAvailable", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetUsersAvailableResponse")]
        System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.User[]> GetUsersAvailableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateAvailabilityUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateAvailabilityUserResponse")]
        bool UpdateAvailabilityUser(int id, bool is_available);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateAvailabilityUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateAvailabilityUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateAvailabilityUserAsync(int id, bool is_available);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetGameByIdGame", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetGameByIdGameResponse")]
        CheckersClient.ServiceSynchroCheckers.Game GetGameByIdGame(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetGameByIdGame", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetGameByIdGameResponse")]
        System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.Game> GetGameByIdGameAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddGame", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddGameResponse")]
        bool AddGame(CheckersClient.ServiceSynchroCheckers.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddGame", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddGameResponse")]
        System.Threading.Tasks.Task<bool> AddGameAsync(CheckersClient.ServiceSynchroCheckers.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateGame", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateGameResponse")]
        bool UpdateGame(CheckersClient.ServiceSynchroCheckers.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateGame", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateGameResponse")]
        System.Threading.Tasks.Task<bool> UpdateGameAsync(CheckersClient.ServiceSynchroCheckers.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeleteGame", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeleteGameResponse")]
        bool DeleteGame(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeleteGame", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeleteGameResponse")]
        System.Threading.Tasks.Task<bool> DeleteGameAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetRoleByIdRole", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetRoleByIdRoleResponse")]
        CheckersClient.ServiceSynchroCheckers.Role GetRoleByIdRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetRoleByIdRole", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetRoleByIdRoleResponse")]
        System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.Role> GetRoleByIdRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddRole", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddRoleResponse")]
        bool AddRole(CheckersClient.ServiceSynchroCheckers.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddRole", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddRoleResponse")]
        System.Threading.Tasks.Task<bool> AddRoleAsync(CheckersClient.ServiceSynchroCheckers.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateRole", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateRoleResponse")]
        bool UpdateRole(CheckersClient.ServiceSynchroCheckers.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateRole", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateRoleResponse")]
        System.Threading.Tasks.Task<bool> UpdateRoleAsync(CheckersClient.ServiceSynchroCheckers.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeleteRole", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeleteRoleResponse")]
        bool DeleteRole(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeleteRole", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeleteRoleResponse")]
        System.Threading.Tasks.Task<bool> DeleteRoleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetGameUserByIdGameUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetGameUserByIdGameUserResponse")]
        CheckersClient.ServiceSynchroCheckers.GameUser GetGameUserByIdGameUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetGameUserByIdGameUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetGameUserByIdGameUserResponse")]
        System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.GameUser> GetGameUserByIdGameUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddGameUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddGameUserResponse")]
        bool AddGameUser(CheckersClient.ServiceSynchroCheckers.GameUser gameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddGameUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddGameUserResponse")]
        System.Threading.Tasks.Task<bool> AddGameUserAsync(CheckersClient.ServiceSynchroCheckers.GameUser gameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateGameUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateGameUserResponse")]
        bool UpdateGameUser(CheckersClient.ServiceSynchroCheckers.GameUser gameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdateGameUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdateGameUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateGameUserAsync(CheckersClient.ServiceSynchroCheckers.GameUser gameUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeleteGameUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeleteGameUserResponse")]
        bool DeleteGameUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeleteGameUser", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeleteGameUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteGameUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetPieceByIdPiece", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetPieceByIdPieceResponse")]
        CheckersClient.ServiceSynchroCheckers.Piece GetPieceByIdPiece(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/GetPieceByIdPiece", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/GetPieceByIdPieceResponse")]
        System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.Piece> GetPieceByIdPieceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddPiece", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddPieceResponse")]
        bool AddPiece(CheckersClient.ServiceSynchroCheckers.Piece piece);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/AddPiece", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/AddPieceResponse")]
        System.Threading.Tasks.Task<bool> AddPieceAsync(CheckersClient.ServiceSynchroCheckers.Piece piece);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdatePiece", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdatePieceResponse")]
        bool UpdatePiece(CheckersClient.ServiceSynchroCheckers.Piece piece);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/UpdatePiece", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/UpdatePieceResponse")]
        System.Threading.Tasks.Task<bool> UpdatePieceAsync(CheckersClient.ServiceSynchroCheckers.Piece piece);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeletePiece", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeletePieceResponse")]
        bool DeletePiece(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSynchroCheckers/DeletePiece", ReplyAction="http://tempuri.org/IServiceSynchroCheckers/DeletePieceResponse")]
        System.Threading.Tasks.Task<bool> DeletePieceAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceSynchroCheckersChannel : CheckersClient.ServiceSynchroCheckers.IServiceSynchroCheckers, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSynchroCheckersClient : System.ServiceModel.ClientBase<CheckersClient.ServiceSynchroCheckers.IServiceSynchroCheckers>, CheckersClient.ServiceSynchroCheckers.IServiceSynchroCheckers {
        
        public ServiceSynchroCheckersClient() {
        }
        
        public ServiceSynchroCheckersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSynchroCheckersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSynchroCheckersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSynchroCheckersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CheckersClient.ServiceSynchroCheckers.User GetUserByIdUser(int id) {
            return base.Channel.GetUserByIdUser(id);
        }
        
        public System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.User> GetUserByIdUserAsync(int id) {
            return base.Channel.GetUserByIdUserAsync(id);
        }
        
        public bool AddUser(CheckersClient.ServiceSynchroCheckers.User user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(CheckersClient.ServiceSynchroCheckers.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool UpdateUser(CheckersClient.ServiceSynchroCheckers.User user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(CheckersClient.ServiceSynchroCheckers.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public bool DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public CheckersClient.ServiceSynchroCheckers.User[] GetUsersAvailable() {
            return base.Channel.GetUsersAvailable();
        }
        
        public System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.User[]> GetUsersAvailableAsync() {
            return base.Channel.GetUsersAvailableAsync();
        }
        
        public bool UpdateAvailabilityUser(int id, bool is_available) {
            return base.Channel.UpdateAvailabilityUser(id, is_available);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAvailabilityUserAsync(int id, bool is_available) {
            return base.Channel.UpdateAvailabilityUserAsync(id, is_available);
        }
        
        public CheckersClient.ServiceSynchroCheckers.Game GetGameByIdGame(int id) {
            return base.Channel.GetGameByIdGame(id);
        }
        
        public System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.Game> GetGameByIdGameAsync(int id) {
            return base.Channel.GetGameByIdGameAsync(id);
        }
        
        public bool AddGame(CheckersClient.ServiceSynchroCheckers.Game game) {
            return base.Channel.AddGame(game);
        }
        
        public System.Threading.Tasks.Task<bool> AddGameAsync(CheckersClient.ServiceSynchroCheckers.Game game) {
            return base.Channel.AddGameAsync(game);
        }
        
        public bool UpdateGame(CheckersClient.ServiceSynchroCheckers.Game game) {
            return base.Channel.UpdateGame(game);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGameAsync(CheckersClient.ServiceSynchroCheckers.Game game) {
            return base.Channel.UpdateGameAsync(game);
        }
        
        public bool DeleteGame(int id) {
            return base.Channel.DeleteGame(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGameAsync(int id) {
            return base.Channel.DeleteGameAsync(id);
        }
        
        public CheckersClient.ServiceSynchroCheckers.Role GetRoleByIdRole(int id) {
            return base.Channel.GetRoleByIdRole(id);
        }
        
        public System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.Role> GetRoleByIdRoleAsync(int id) {
            return base.Channel.GetRoleByIdRoleAsync(id);
        }
        
        public bool AddRole(CheckersClient.ServiceSynchroCheckers.Role role) {
            return base.Channel.AddRole(role);
        }
        
        public System.Threading.Tasks.Task<bool> AddRoleAsync(CheckersClient.ServiceSynchroCheckers.Role role) {
            return base.Channel.AddRoleAsync(role);
        }
        
        public bool UpdateRole(CheckersClient.ServiceSynchroCheckers.Role role) {
            return base.Channel.UpdateRole(role);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRoleAsync(CheckersClient.ServiceSynchroCheckers.Role role) {
            return base.Channel.UpdateRoleAsync(role);
        }
        
        public bool DeleteRole(int id) {
            return base.Channel.DeleteRole(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteRoleAsync(int id) {
            return base.Channel.DeleteRoleAsync(id);
        }
        
        public CheckersClient.ServiceSynchroCheckers.GameUser GetGameUserByIdGameUser(int id) {
            return base.Channel.GetGameUserByIdGameUser(id);
        }
        
        public System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.GameUser> GetGameUserByIdGameUserAsync(int id) {
            return base.Channel.GetGameUserByIdGameUserAsync(id);
        }
        
        public bool AddGameUser(CheckersClient.ServiceSynchroCheckers.GameUser gameUser) {
            return base.Channel.AddGameUser(gameUser);
        }
        
        public System.Threading.Tasks.Task<bool> AddGameUserAsync(CheckersClient.ServiceSynchroCheckers.GameUser gameUser) {
            return base.Channel.AddGameUserAsync(gameUser);
        }
        
        public bool UpdateGameUser(CheckersClient.ServiceSynchroCheckers.GameUser gameUser) {
            return base.Channel.UpdateGameUser(gameUser);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateGameUserAsync(CheckersClient.ServiceSynchroCheckers.GameUser gameUser) {
            return base.Channel.UpdateGameUserAsync(gameUser);
        }
        
        public bool DeleteGameUser(int id) {
            return base.Channel.DeleteGameUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteGameUserAsync(int id) {
            return base.Channel.DeleteGameUserAsync(id);
        }
        
        public CheckersClient.ServiceSynchroCheckers.Piece GetPieceByIdPiece(int id) {
            return base.Channel.GetPieceByIdPiece(id);
        }
        
        public System.Threading.Tasks.Task<CheckersClient.ServiceSynchroCheckers.Piece> GetPieceByIdPieceAsync(int id) {
            return base.Channel.GetPieceByIdPieceAsync(id);
        }
        
        public bool AddPiece(CheckersClient.ServiceSynchroCheckers.Piece piece) {
            return base.Channel.AddPiece(piece);
        }
        
        public System.Threading.Tasks.Task<bool> AddPieceAsync(CheckersClient.ServiceSynchroCheckers.Piece piece) {
            return base.Channel.AddPieceAsync(piece);
        }
        
        public bool UpdatePiece(CheckersClient.ServiceSynchroCheckers.Piece piece) {
            return base.Channel.UpdatePiece(piece);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePieceAsync(CheckersClient.ServiceSynchroCheckers.Piece piece) {
            return base.Channel.UpdatePieceAsync(piece);
        }
        
        public bool DeletePiece(int id) {
            return base.Channel.DeletePiece(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeletePieceAsync(int id) {
            return base.Channel.DeletePieceAsync(id);
        }
    }
}
